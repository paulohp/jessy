#!/usr/bin/env node

/**
 * Javascript Portugol
 * https://github.com/moacir/jspt
 *
 * Copyright (c) 2013 Moacir de Oliveira
 * Licensed under the MIT license.
 */

var fs = require('fs'),
    nopt = require('nopt'),
    path = require('path'),
    meta = require('../package.json'),
    jspt = require('../lib/jspt/main');

var opts = nopt({
    version: Boolean,
    help: Boolean,
    compile: path,
    run: path,
    ast: path
});

var versionText = [
    'JSPT - Javascript Portugol',
    'Versão: ' + meta.version,
].join('\n');

var helpText = [
    versionText,
    '',
    'Uso: $ jspt --run [arquivo]',
    '',
    'Options:',
    '   --run [arquivo]              Executa um arquivo Portugol',
    '   --compile [arquivo]          Compila um arquivo Portugol para Javascript',
    '   --ast [arquivo]              Cria uma Árvore Sintática Abstrata de um arquivo Portugol',
    '   --help                       Mostra este texto de ajuda',
    '   --version                    Mostra informações sobre a versão',
    '',
].join('\n');

if (opts.help) {
    console.log(helpText);
    process.exit(0);
}

if (opts.version) {
    console.log(versionText);
    process.exit(0);
}

if (opts.run) {
    openFile(opts.run, function (data) {
        jspt.execute(data, createContext());
    });
} else if (opts.compile) {
    openFile(opts.compile, function (data) {
        console.log(jspt.compile(data));
    });
} else if (opts.ast) {
    openFile(opts.ast, function (data) {
        console.log(JSON.stringify(jspt.ast(data)));
    });
} else {
    console.log(helpText);
    process.exit(1);
}

function openFile(file, fn) {
    fs.readFile(file, 'utf-8', function(error, data) {
        if (error) {
            throw new Error(error);
        }

        fn(data);
    });
}

function createContext() {
    return require('../lib/jspt/modules/std').module;
}
